version: "3"

volumes:
 skill-data:
 comments-data:
 rabbit-data:
 identity-data:

networks:
 frontend:
 backend:
 frontend:
 identity-network:

services:

 kaizen-front:
  container_name: "kaizen-front"
  image: kaizen-front
  build:
   context: ../.
   dockerfile: ../src/Kaizen.Ui.Angular/Dockerfile
  volumes:
   - '/var/run/docker.sock:/tmp/docker.sock:ro'
   - ../../src/Kaizen.Ui.Angular/templates:/etc/nginx/templates
   - './nginx-dhparam:/etc/nginx/dhparam/'
   - type: bind
     source: ./nginx-certs
     target: /etc/nginx/certs
   - type: bind
     source: ../../src/Kaizen.Ui.Angular/dist/kaizen
     target: /usr/share/nginx/html
  ports: 
   - '443:443'
   - '80:80'
  networks:
   frontend:
   identity-network:
    aliases:
     - sts.${DOMAIN_NAME:-kai.local}
     - admin.${DOMAIN_NAME:-kai.local}
     - admin-api.${DOMAIN_NAME:-kai.local}
  environment: 
   - API_URL=http://kaizen-api-gateway/api
   - DOMAIN_NAME=${DOMAIN_NAME:-kai.local}
  depends_on:
   - kaizen-api-gateway

 skoruba.identityserver4.admin:
  image: skoruba/identityserver4-admin:rc4 
  container_name: skoruba-identityserver4-admin
  environment:
   - ASPNETCORE_URLS=https://+;http://+
   - 'Authority=https://sts.${DOMAIN_NAME:-kai.local}'
   - 'AppUri=https://${DOMAIN_NAME:-kai.local}'
   - 'ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS:-pass1}'
   - 'ASPNETCORE_Kestrel__Certificates__Default__Path=/usr/local/share/ca-certificates/${DOMAIN_NAME:-kai.local}.pfx'
   - VIRTUAL_HOST=admin.${DOMAIN_NAME:-kai.local}
   - "DatabaseProviderConfiguration__ProviderType=PostgreSQL"
   - "ConnectionStrings__ConfigurationDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__PersistedGrantDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__IdentityDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__AdminLogDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__AdminAuditLogDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__DataProtectionDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin.${DOMAIN_NAME:-kai.local}'
   - 'AdminConfiguration__IdentityAdminRedirectUri=https://admin.${DOMAIN_NAME:-kai.local}/signin-oidc'
   - 'AdminConfiguration__IdentityServerBaseUrl=https://sts.${DOMAIN_NAME:-kai.local}'
   - AdminConfiguration__RequireHttpsMetadata=false
   - DockerConfiguration__UpdateCaCertificate=true
   - "Serilog__WriteTo__1__Args__connectionString=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
  depends_on:
   - identity-db
   - skoruba.identityserver4.sts.identity
  volumes:
   - type: bind
     source: ./nginx-certs
     target: /usr/local/share/ca-certificates
   - ./identity-init-data/identityserverdata.json:/app/identityserverdata.json
  networks:
   frontend: 
   identity-network:

 skoruba.identityserver4.admin.api:
  image: skoruba/identityserver4-admin-api:rc4
  networks:
   - frontend
   - identity-network
  environment:
   - ASPNETCORE_URLS=https://+;http://+
   - VIRTUAL_HOST=admin-api.${DOMAIN_NAME:-kai.local}
   - 'ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS:-pass1}'
   - 'ASPNETCORE_Kestrel__Certificates__Default__Path=/usr/local/share/ca-certificates/${DOMAIN_NAME:-kai.local}.pfx'
   - DockerConfiguration__UpdateCaCertificate=true
   - AdminApiConfiguration__RequireHttpsMetadata=false
   - 'AdminApiConfiguration__ApiBaseUrl=https://admin-api.${DOMAIN_NAME:-kai.local}'
   - 'AdminApiConfiguration__IdentityServerBaseUrl=https://sts.${DOMAIN_NAME:-kai.local}'
   - "DatabaseProviderConfiguration__ProviderType=PostgreSQL"
   - "ConnectionStrings__ConfigurationDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__PersistedGrantDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__IdentityDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__AdminLogDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__AdminAuditLogDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__DataProtectionDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
  container_name: skoruba-identityserver4-admin-api
  volumes:
   - type: bind
     source: ./nginx-certs
     target: /usr/local/share/ca-certificates

 skoruba.identityserver4.sts.identity:
  image: skoruba/identityserver4-sts-identity:rc4
  container_name: skoruba-identityserver4-sts-identity
  environment:
   - ASPNETCORE_URLS=https://+;http://+
   - VIRTUAL_HOST=sts.${DOMAIN_NAME:-kai.local}
   - "DatabaseProviderConfiguration__ProviderType=PostgreSQL"
   - "ConnectionStrings__ConfigurationDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__PersistedGrantDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__IdentityDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - "ConnectionStrings__DataProtectionDbConnection=Host=identity-db;Port=5432;Database=IdentityServer4Admin;Username=sa;Password=${DB_PASSWORD:-Password_123}"
   - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin.${DOMAIN_NAME:-kai.local}'
   - 'AdvancedConfiguration__PublicOrigin=https://sts.${DOMAIN_NAME:-kai.local}'
   - 'AdvancedConfiguration__IssuerUri=https://sts.${DOMAIN_NAME:-kai.local}'
   - 'ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS:-pass1}'
   - 'ASPNETCORE_Kestrel__Certificates__Default__Path=/usr/local/share/ca-certificates/${DOMAIN_NAME:-kai.local}.pfx'
   - DockerConfiguration__UpdateCaCertificate=true
  depends_on:
   - identity-db
  volumes:
   - type: bind
     source: ./nginx-certs
     target: /usr/local/share/ca-certificates
  networks:
   identity-network:

 identity-db:
  image: postgres:11
  ports:
   - 5432:5432
  container_name: identity-db
  environment:
   POSTGRES_USER: sa
   POSTGRES_PASSWORD: "${DB_PASSWORD:-Password_123}"
   POSTGRES_DB: IdentityServer4Admin
  networks:
   identity-network:
  volumes:
   - identity-data:/var/lib/postgresql/data

 kaizen-rabbit:
  container_name: "kaizen-rabbit"
  image: "rabbitmq:3-management"
  networks:
   - backend
  hostname: kaizen-rabbit
  environment:
   - RABBITMQ_DEFAULT_USER=Nora 
   - RABBITMQ_DEFAULT_PASS=xTJD0eNCwADZJ4go
  volumes:
   - rabbit-data:/var/lib/rabbitmq
  ports:
  # manager ui is used only for debugging.
   - 8082:15672
  
 kaizen-api-gateway:
  container_name: kaizen-api-gateway
  hostname: kaizen-api-gateway
  image: kaizen-api-gateway
  build:
   context: ../../src/Kaizen.ApiGateway
   dockerfile: Dockerfile
  #ports:
   # is used for debugging only
   #- 443:433
  environment:
   # debug settings start 
   - ASPNETCORE_ENVIRONMENT=Production
   - ASPNETCORE_URLS=http://+:80
   # debug settings end
   - 'TokenAuthority=https://sts.${DOMAIN_NAME:-kai.local}'
   - 'AppUri=https://${DOMAIN_NAME:-kai.local}'
   - 'ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS:-pass1}'
   - 'ASPNETCORE_Kestrel__Certificates__Default__Path=/usr/local/share/ca-certificates/${DOMAIN_NAME:-kai.local}.pfx'
   - RABBITUSER=Nora
   - RABBITPASSWORD=xTJD0eNCwADZJ4go
   - RABBITHOST=kaizen-rabbit
  networks:
   - backend
   - frontend
   - identity-network
  volumes:
   # direct binding is used for faster restart and debugging
   - type: bind
     source: ../../src/Kaizen.ApiGateway/logs
     target: /app/logs
   - type: bind
     source: ../../src/Kaizen.ApiGateway/bin/Debug/netcoreapp3.1
     target: /app
   - type: bind
     source: ./nginx-certs
     target: /usr/local/share/ca-certificates
   - ~/.vsdbg:/remote_debugger:rw
  depends_on:
   - kaizen-rabbit

 kaizen-skills-db:
  container_name: "kaizen-skills-db"
  image: "postgres"
  volumes: 
    - skill-data:/var/lib/postgresql/data
  networks:
    - backend
  ports:
    - 5666:5432
  environment:
    - POSTGRES_USER=uliss
    - POSTGRES_PASSWORD=lOTUzZsAqSQW2gVf
    - POSTGRES_DB=SkillDb

 kaizen-skills:
  container_name: kaizen-skills
  hostname: kaizen-skills
  image: kaizen-skills
  build:
   context: ../../src/Kaizen.Skill/Kaizen.Skill.Service
   dockerfile: Dockerfile
  #ports:
   # is used for debugging only
   #- 443:433
  environment:
   # debug settings start 
   - ASPNETCORE_ENVIRONMENT=Production
   - ASPNETCORE_URLS=http://+:80
   # debug settings end
   - DBHOST=kaizen-skills-db
   - DBPORT=5432
   - DBNAME=SkillDb
   - DBUSER=uliss
   - DBPASSWORD=lOTUzZsAqSQW2gVf
   - RABBITUSER=Nora
   - RABBITPASSWORD=xTJD0eNCwADZJ4go
   - RABBITHOST=kaizen-rabbit
  networks:
   - backend
  volumes:
   # direct binding is used for faster restart and debugging
   - type: bind
     source: ../../src/Kaizen.Skill/Kaizen.Skill.Service/logs
     target: /app/logs
   - type: bind
     source: ../../src/Kaizen.Skill/Kaizen.Skill.Service/bin/Debug/netcoreapp3.1
     target: /app
   - ~/.vsdbg:/remote_debugger:rw
  depends_on:
   - kaizen-rabbit
   - kaizen-skills-db

 kaizen-comments:
  container_name: kaizen-comments
  hostname: kaizen-comments
  image: kaizen-comments
  build:
   context: ../../src/Kaizen.Comments/Kaizen.Comments.Service
   dockerfile: Dockerfile
  #ports:
   # is used for debugging only
   #- 443:433
  environment:
   # debug settings start 
   - ASPNETCORE_ENVIRONMENT=Production
   - ASPNETCORE_URLS=http://+:80
   # debug settings end
   - DBHOST=kaizen-comments-db
   - DBPORT=27017
   - DBNAME=SkillDb
   - DBUSER=Clob
   - DBPASSWORD=64JuZGAw4tQAQ8kf

   - RABBITUSER=Nora
   - RABBITPASSWORD=xTJD0eNCwADZJ4go
   - RABBITHOST=kaizen-rabbit
  networks:
   - backend
  volumes:
   # direct binding is used for faster restart and debugging
   - type: bind
     source: ../../src/Kaizen.Comments/Kaizen.Comments.Service/logs
     target: /app/logs
   - type: bind
     source: ../../src/Kaizen.Comments/Kaizen.Comments.Service/bin/Debug/netcoreapp3.1
     target: /app
   - ~/.vsdbg:/remote_debugger:rw
  depends_on:
   - kaizen-rabbit
   - kaizen-comments-db

 kaizen-comments-db:
  image: mongo
  hostname: kaizen-comments-db
  container_name: "kaizen-comments-db"
  volumes:
   - comments-data:/data/db
  networks:
   - backend
  environment:
   - MONGO_INITDB_ROOT_USERNAME=Clob
   - MONGO_INITDB_ROOT_PASSWORD=64JuZGAw4tQAQ8kf